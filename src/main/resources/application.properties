application.name=@project.artifactId@
build.version=@project.version@
server.shutdown=graceful
spring.lifecycle.timeout-per-shutdown-phase=25s
# Actuator
management.endpoints.web.exposure.include=health,info
management.endpoints.jmx.exposure.include=health,info
management.info.env.enabled=true
management.endpoint.health.probes.enabled=true
management.health.livenessState.enabled=true
management.health.readinessState.enabled=true
# Server
server.servlet.context-path=/
server.port=8080
# Logging
logging.level.root=\${ROOT_LOGGING_LEVEL:INFO}
logging.level.it.pagopa=\${APP_LOGGING_LEVEL:INFO}
logging.level.web=\${WEB_LOGGING_LEVEL:INFO}
# CDC queue
scheduler.cdc.queue.storageConnectionString=\${SCHEDULER_CDC_QUEUE_CONNECTION_STRING}
scheduler.cdc.queue.storageQueueName=\${SCHEDULER_CDC_QUEUE_NAME}
scheduler.cdc.queue.ttlSeconds=\${SCHEDULER_CDC_QUEUE_TTL_SECONDS}
scheduler.cdc.queue.visibilityTimeoutWalletCdc=\${SCHEDULER_CDC_QUEUE_VISIBILITY_TIMEOUT_SECONDS}
# Retry policy for sending message
scheduler.cdc.retry-send.maxAttempts=\${SCHEDULER_CDC_SEND_RETRY_MAX_ATTEMPTS}
scheduler.cdc.retry-send.intervalInMs=\${SCHEDULER_CDC_SEND_RETRY_INTERVAL_IN_MS}
# CDC resume policy
cdc.redis-resume.keyspace=\${CDC_REDIS_RESUME_KEYSPACE}
cdc.redis-resume.target=\${CDC_REDIS_RESUME_TARGET}
cdc.redis-resume.fallbackInMin=\${CDC_REDIS_RESUME_FALLBACK_IN_MIN}
cdc.redis-resume.ttlInMin=\${CDC_REDIS_RESUME_TTL_IN_MIN}
cdc.resume.saveInterval=\${CDC_RESUME_SAVE_INTERVAL}