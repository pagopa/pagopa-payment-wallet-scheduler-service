application.name=@project.artifactId@
build.version=@project.version@
server.shutdown=graceful
spring.lifecycle.timeout-per-shutdown-phase=25s
# Actuator
management.endpoints.web.exposure.include=health,info
management.endpoints.jmx.exposure.include=health,info
management.info.env.enabled=true
management.endpoint.health.probes.enabled=true
management.health.livenessState.enabled=true
management.health.readinessState.enabled=true
# Server
server.servlet.context-path=/
server.port=8080
# Logging
logging.level.root=\${ROOT_LOGGING_LEVEL:INFO}
logging.level.it.pagopa=\${APP_LOGGING_LEVEL:INFO}
logging.level.web=\${WEB_LOGGING_LEVEL:INFO}
# Mongo
spring.data.mongodb.uri=mongodb://\${MONGO_USERNAME}:\${MONGO_PASSWORD}@\${MONGO_HOST}:\${MONGO_PORT}/?ssl=\${MONGO_SSL_ENABLED}&readPreference=secondaryPreferred&minPoolSize=\${MONGO_MIN_POOL_SIZE}&maxPoolSize=\${MONGO_MAX_POOL_SIZE}&maxIdleTimeMS=\${MONGO_MAX_IDLE_TIMEOUT_MS}&connectTimeoutMS=\${MONGO_CONNECTION_TIMEOUT_MS}&socketTimeoutMS=\${MONGO_SOCKET_TIMEOUT_MS}&serverSelectionTimeoutMS=\${MONGO_SERVER_SELECTION_TIMEOUT_MS}&waitQueueTimeoutMS=\${MONGO_WAITING_QUEUE_MS}&heartbeatFrequencyMS=\${MONGO_HEARTBEAT_FREQUENCY_MS}\${MONGO_REPLICA_SET_OPTION:}
spring.data.mongodb.database=\${MONGO_DB_NAME}
# CDC queue
scheduler.cdc.queue.storageConnectionString=\${SCHEDULER_CDC_QUEUE_CONNECTION_STRING}
scheduler.cdc.queue.storageQueueName=\${SCHEDULER_CDC_QUEUE_NAME}
scheduler.cdc.queue.ttlSeconds=\${SCHEDULER_CDC_QUEUE_TTL_SECONDS}
scheduler.cdc.queue.visibilityTimeoutWalletCdc=\${SCHEDULER_CDC_QUEUE_VISIBILITY_TIMEOUT_SECONDS}
# Retry policy for sending message
scheduler.cdc.retry-send.maxAttempts=\${SCHEDULER_CDC_SEND_RETRY_MAX_ATTEMPTS}
scheduler.cdc.retry-send.intervalInMs=\${SCHEDULER_CDC_SEND_RETRY_INTERVAL_IN_MS}
# Wallet search configuration
wallet.search.status=\${WALLET_SEARCH_STATUS}
wallet.search.limit=\${WALLET_SEARCH_LIMIT}
# CDC resume policy
scheduler.redis-resume.keyspace=\${SCHEDULER_REDIS_RESUME_KEYSPACE}
scheduler.redis-resume.ttlInMin=\${SCHEDULER_REDIS_RESUME_TTL_IN_MIN}
# Scheduler lock policy
scheduler.redis-job-lock.keyspace=\${SCHEDULER_REDIS_JOB_LOCK_KEYSPACE}
scheduler.redis-job-lock.ttlSec=\${SCHEDULER_REDIS_JOB_LOCK_TTL_SEC}
scheduler.redis-job-lock.waitTimeSec=\${SCHEDULER_REDIS_JOB_LOCK_WAIT_TIME_SEC}
# Redis
spring.data.redis.host=\${REDIS_HOST}
spring.data.redis.password=\${REDIS_PASSWORD}
spring.data.redis.port=\${REDIS_PORT}
spring.data.redis.ssl.enabled=\${REDIS_SSL_ENABLED}
spring.data.redis.repositories.type=none

payment-wallet-job.execution.cron=\${PAYMENT_WALLET_JOB_EXECUTION_CRON}
payment-wallet-job.execution.startDate=\${PAYMENT_WALLET_JOB_EXECUTION_START_DATE}
payment-wallet-job.execution.endDate=\${PAYMENT_WALLET_JOB_EXECUTION_END_DATE}
